//
//  CZDynamicViewController.m
//  FilmSquad
//
//  Created by 陈卓 on 16/12/6.
//  Copyright © 2016年 cz. All rights reserved.
//

#import "CZDynamicViewController.h"
#import "CZ_DynamicCell.h"
#import "CZDynamicDetailViewController.h"
#import "CZSendingViewController.h"
@interface CZDynamicViewController ()<CZ_DynamicCellDelegate,CZSendingViewControllerDelegate,UITableViewDelegate,UITableViewDataSource>
@property(nonatomic,strong) UITableView *tableView;
@property(nonatomic,strong) UIView *headerView;                 //表头视图
@property(nonatomic,strong) UIImageView *headerImageView;       //表头背景
@property(nonatomic,strong) UIImageView *userHeadImageView;     //表头个人头像
@property(nonatomic,strong) UIView *headerBar;                  //表头选项栏
@property(nonatomic,strong) UIButton *whriteButton;             //写影评按钮
@property(nonatomic,strong) UIView *whriteButtonSeparateView;        //分割线

@end

@implementation CZDynamicViewController
#pragma mark - 懒加载

-(UIView *)headerBar{
    if(!_headerBar){
        _headerBar = [[UIView alloc]init];
        _headerBar.backgroundColor = [UIColor colorWithRed:198.0/255 green:224.0/255 blue:236.0/255 alpha:0.6];
    }
    return _headerBar;
}

-(UIButton *)whriteButton{
    if(!_whriteButton){
        _whriteButton = [[UIButton alloc]init];
        [_whriteButton setTitleColor:[UIColor whiteColor] forState:(UIControlStateHighlighted)];
        [_whriteButton setTitleColor:[UIColor grayColor] forState:(UIControlStateNormal)];
        [_whriteButton setTitle:@"写影评" forState:(UIControlStateNormal)];
        _whriteButton.titleLabel.font = YuanFont(16);
        _whriteButton.titleLabel.textAlignment = NSTextAlignmentCenter;
        
        [_whriteButton addTarget:self action:@selector(whriteDynamic:) forControlEvents:(UIControlEventTouchUpInside)];
        
        [self.headerBar addSubview:_whriteButton];
    }
    return _whriteButton;
}
-(UIView *)whriteButtonSeparateView{
    if(!_whriteButtonSeparateView){
        _whriteButtonSeparateView = [[UIView alloc]init];
        _whriteButtonSeparateView.backgroundColor = [UIColor lightGrayColor];
        [self.headerBar addSubview:_whriteButtonSeparateView];
    }
    return _whriteButtonSeparateView;
}

-(UITableView *)tableView{
    if(!_tableView){
        _tableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 64, kWIDTH, kHEIGHT-64-44)];
        _tableView.delegate = self;
        _tableView.dataSource = self;
        self.headerView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, kWIDTH, kWIDTH*0.618)];
        self.headerView.backgroundColor = [UIColor clearColor];
        _tableView.tableHeaderView = self.headerView;
        
        self.headerImageView = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, kWIDTH, kWIDTH*0.618)];
        self.headerImageView.image = [UIImage imageNamed:@"dynamicHead"];
        [self.headerView addSubview:self.headerImageView];
        [self.headerView addSubview:self.headerBar];
        
        [self.view addSubview:_tableView];
    }
    return _tableView;
}
//用户头像
-(UIImageView *)userHeadImageView{
    if(!_userHeadImageView){
        _userHeadImageView = [[UIImageView alloc]init];
        [self.headerView addSubview: _userHeadImageView];
    }
    return _userHeadImageView;
}
#pragma mark - init
-(instancetype)init{
    if(self = [super init]){
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(changeHeadImage:) name:@"changHeadImage" object:nil];
    }
    return self;
}
#pragma mark - 通知监听方法
-(void)changeHeadImage:(NSNotification*)notification{
    NSDictionary *dic = notification.userInfo;
    self.userHeadImageView.image = dic[@"image"];
}

#pragma mark - 控件方法
-(void)whriteDynamic:(UIButton*)sender{
    CZSendingViewController *sendingViewController = [[CZSendingViewController alloc]init];
    sendingViewController.title = @"发表影评";
    sendingViewController.cz_delegate = self;
    UINavigationController *sendingNavigationController = [[UINavigationController alloc]initWithRootViewController:sendingViewController];
    [self presentViewController:sendingNavigationController animated:YES completion:nil];
}
#pragma mark - 加载页面
- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    //设置背景
    //添加背景图片
    UIImageView *imageView = [Utils glassImageViewWithImage:nil andAlpha:kGlassAlpha];
    
    [self.view addSubview:imageView];
    
    [self.tableView registerClass:[CZ_DynamicCell class] forCellReuseIdentifier:@"dynamicCell"];
    [self setupUI];
    [self requestData];
}
-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    self.tabBarController.tabBar.hidden = NO;
    [self.tableView reloadData];
    
    
}
-(void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:animated];
    //    [self.tableView triggerPullToRefresh];
}
#pragma mark - 从本地获取信息，若没有则触发下拉刷新
-(void)requestData{
    NSString *allDynamicPath = [NSHomeDirectory() stringByAppendingString:@"/Documents/AllDynamic/DynamicArr.arch"];
    self.allDynamicFrame = [[NSKeyedUnarchiver unarchiveObjectWithFile:allDynamicPath] mutableCopy];
    if(!self.allDynamicFrame){
        [self.tableView triggerPullToRefresh];
    }else{
        [self.tableView reloadData];
    }
}
#pragma mark - 设置界面，添加下拉刷新，上啦加载
-(void)setupUI{
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.tableView.contentInset = UIEdgeInsetsMake(0, 0, -64, 0);
    //添加下拉刷新
    __block CZDynamicViewController *weakSelf = self;
    [self.tableView addPullToRefreshWithActionHandler:^{
        BmobQuery *query = [BmobQuery queryWithClassName:@"Dynamic"];
        [query orderByDescending:@"createdAt"];
        [query includeKey:@"User,Repost"];
        query.limit = 30;
        [query findObjectsInBackgroundWithBlock:^(NSArray *array, NSError *error) {
            weakSelf.allDynamicFrame = [[weakSelf getAllDynamicFrameArrayFromArray:[Dynamic getAllDynamicArrayFromArray:array]] mutableCopy];
            [weakSelf.tableView reloadData];
            [weakSelf.tableView.pullToRefreshView stopAnimating];
            //归档
            //获取沙箱根目录
            NSString *documentPath = [NSHomeDirectory() stringByAppendingString:@"/Documents"];
            //获所有动态的文件夹，不存在则创建
            NSString *filePath = [documentPath stringByAppendingString:@"/AllDynamic"];
            if(![[NSFileManager defaultManager] fileExistsAtPath:filePath]){
                [[NSFileManager defaultManager] createDirectoryAtPath:filePath withIntermediateDirectories:YES attributes:nil error:nil];
            }
            NSString *allDynamicPath = [filePath stringByAppendingString:@"/DynamicArr.arch"];
            [NSKeyedArchiver archiveRootObject:weakSelf.allDynamicFrame toFile:allDynamicPath];
        }];
        weakSelf.navigationController.tabBarItem.badgeValue = nil;
    }];
    //添加上拉刷新
    [self.tableView addInfiniteScrollingWithActionHandler:^{
        BmobQuery *query = [BmobQuery queryWithClassName:@"Dynamic"];
        [query orderByDescending:@"createdAt"];
        [query includeKey:@"User"];
        query.limit = 30;
        query.skip = weakSelf.allDynamicFrame.count;
        [query findObjectsInBackgroundWithBlock:^(NSArray *array, NSError *error) {
            NSArray *addDynamic = [Dynamic getAllDynamicArrayFromArray:array];
            [weakSelf.allDynamicFrame addObjectsFromArray:[weakSelf getAllDynamicFrameArrayFromArray:addDynamic]];
            [weakSelf.tableView reloadData];
            [weakSelf.tableView.infiniteScrollingView stopAnimating];
        }];
    }];
    //设置表头bar位置
    [self.headerBar mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.right.bottom.equalTo(self.headerView);
        make.height.equalTo(self.headerView).multipliedBy(0.15);
    }];
    //设置写影评按钮
    [self.whriteButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.top.bottom.equalTo(self.headerBar);
        make.width.equalTo(self.headerBar).multipliedBy(1.0/3);
    }];
    //设置影评分割线
    [self.whriteButtonSeparateView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.right.equalTo(self.whriteButton.mas_left);
        make.width.mas_equalTo(1);
        make.centerY.equalTo(self.whriteButton);
        make.height.equalTo(self.headerBar).multipliedBy(0.6);
    }];
    //设置头像位置
    [self.userHeadImageView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.height.width.equalTo(self.headerView.mas_height).multipliedBy(1.0/3);
        make.left.equalTo(self.headerView).offset(8);
        make.bottom.equalTo(self.headerBar.mas_top).offset(-8);
    }];
    self.userHeadImageView.layer.cornerRadius = self.headerView.frame.size.height/3/2;
    self.userHeadImageView.layer.masksToBounds = YES;
    self.userHeadImageView.backgroundColor = [UIColor whiteColor];
    self.userHeadImageView.layer.borderColor = kWhiteColor.CGColor;
    self.userHeadImageView.layer.borderWidth = 2;
    NSString *headURL = [[BmobUser currentUser] objectForKey:@"HeadURL"];
    [self.userHeadImageView sd_setImageWithURL:[NSURL URLWithString:headURL] placeholderImage:[UIImage imageNamed:@"user"]];
}

#pragma mark - 通过dynamic数组获得dynamiFrame数组
-(NSArray *)getAllDynamicFrameArrayFromArray:(NSArray<Dynamic *> *)array{
    NSMutableArray *allDynamicF = [[NSMutableArray alloc]init];
    for(Dynamic *dynamic in array){
        DynamicFrame *dynamicF = [[DynamicFrame alloc]init];
        dynamicF.dynamic = dynamic;
        [allDynamicF addObject:dynamicF];
    }
    return allDynamicF;
}


#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    return self.allDynamicFrame.count;
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    CZ_DynamicCell *cell = [tableView dequeueReusableCellWithIdentifier:@"dynamicCell" forIndexPath:indexPath];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    
    cell.dynamicFrame = self.allDynamicFrame[indexPath.row];
    cell.cz_delegate = self;
    
    return cell;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    return [self.allDynamicFrame[indexPath.row] getTotalHeight];
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    CZDynamicDetailViewController *dynamicDetalViewController  = [[CZDynamicDetailViewController alloc]init];
    dynamicDetalViewController .dynamicFrame = self.allDynamicFrame[indexPath.row];
    UINavigationController *navigationController = [[UINavigationController alloc]initWithRootViewController:dynamicDetalViewController];
    [self presentViewController:navigationController animated:YES completion:nil];
}



#pragma mark - DynamicCellDelegate
//点击评论时的代理
-(void)CZ_DynamicCell:(CZ_DynamicCell *)dynamicCell clickedComment:(UIControl *)control{
    CZDynamicDetailViewController *dynamicDetalViewController = [[CZDynamicDetailViewController alloc]init];
    dynamicDetalViewController.dynamicFrame = dynamicCell.dynamicFrame;
    dynamicDetalViewController.isComment = YES;
    UINavigationController *navigationController = [[UINavigationController alloc]initWithRootViewController:dynamicDetalViewController];
    [self presentViewController:navigationController animated:YES completion:nil];
}

//点击转发时的代理
-(void)CZ_DynamicCell:(CZ_DynamicCell *)dynamicCell clickedRepost:(UIControl *)control{
    CZSendingViewController *sendViewcontroller = [[CZSendingViewController alloc]init];
    sendViewcontroller.title = @"转发";
    if(dynamicCell.dynamicFrame.dynamic.reposts_status){
        sendViewcontroller.dynamic = dynamicCell.dynamicFrame.dynamic.reposts_status;
    }else{
        sendViewcontroller.dynamic = dynamicCell.dynamicFrame.dynamic;
    }
    UINavigationController *navigationController = [[UINavigationController alloc]initWithRootViewController:sendViewcontroller];
    [self presentViewController:navigationController animated:YES completion:nil];
}

//点击点赞时的代理
-(void)CZ_DynamicCell:(CZ_DynamicCell *)dynamicCell clickedZan:(UIControl *)control{
    NSMutableArray<NSString*> *zanList = dynamicCell.dynamicFrame.dynamic.zanList;
    if(zanList == nil){
        zanList = [[NSMutableArray alloc]init];
    }
    BmobObject *object = dynamicCell.dynamicFrame.dynamic.bmobObjext;
    if(dynamicCell.dynamicFrame.dynamic.isZan == YES){
        dynamicCell.dynamicFrame.dynamic.zan_count = @(dynamicCell.dynamicFrame.dynamic.zan_count.intValue-1).stringValue;
        dynamicCell.zanControl.titleLabel.text = dynamicCell.dynamicFrame.dynamic.zan_count;
        dynamicCell.zanControl.imageView.image = [UIImage imageNamed:@"zan_normal"];
        dynamicCell.dynamicFrame.dynamic.isZan = NO;
        
        [zanList removeObject:[BmobUser currentUser].objectId];
        [object setObject:zanList forKey:@"ZanList"];
        [object setObject:dynamicCell.dynamicFrame.dynamic.user forKey:@"User"];
        if(dynamicCell.dynamicFrame.dynamic.reposts_status){
            [object setObject:dynamicCell.dynamicFrame.dynamic.reposts_status.bmobObjext forKey:@"Repost"];
        }
        [object decrementKey:@"Zan_Num"];
        [object updateInBackgroundWithResultBlock:^(BOOL isSuccessful, NSError *error) {
            if(!isSuccessful){
                dynamicCell.dynamicFrame.dynamic.isZan = YES;
                dynamicCell.dynamicFrame.dynamic.zan_count = @(dynamicCell.dynamicFrame.dynamic.zan_count.intValue+1).stringValue;
                dynamicCell.zanControl.titleLabel.text = dynamicCell.dynamicFrame.dynamic.zan_count;
                dynamicCell.zanControl.imageView.image = [UIImage imageNamed:@"zan_pressed"];
            }
        }];

        

    }else{
        dynamicCell.dynamicFrame.dynamic.isZan = YES;
        dynamicCell.dynamicFrame.dynamic.zan_count = @(dynamicCell.dynamicFrame.dynamic.zan_count.intValue+1).stringValue;
        dynamicCell.zanControl.titleLabel.text = dynamicCell.dynamicFrame.dynamic.zan_count;
        dynamicCell.zanControl.imageView.image = [UIImage imageNamed:@"zan_pressed"];

        [zanList addObject:[BmobUser currentUser].objectId];
        [object setObject:zanList forKey:@"ZanList"];
        [object setObject:dynamicCell.dynamicFrame.dynamic.user forKey:@"User"];
        if(dynamicCell.dynamicFrame.dynamic.reposts_status){
        [object setObject:dynamicCell.dynamicFrame.dynamic.reposts_status.bmobObjext forKey:@"Repost"];
        }

        [object incrementKey:@"Zan_Num"];
        [object updateInBackgroundWithResultBlock:^(BOOL isSuccessful, NSError *error) {
            if(!isSuccessful){
                dynamicCell.dynamicFrame.dynamic.zan_count = @(dynamicCell.dynamicFrame.dynamic.zan_count.intValue-1).stringValue;
                dynamicCell.zanControl.titleLabel.text = dynamicCell.dynamicFrame.dynamic.zan_count;
                dynamicCell.zanControl.imageView.image = [UIImage imageNamed:@"zan_normal"];
                dynamicCell.dynamicFrame.dynamic.isZan = NO;

            }
        }];
    }
    
}
-(void)CZ_DynamicCell:(CZ_DynamicCell *)dynamicCell clickedTopButton:(UIControl *)button{
    
}

#pragma mark - SendingDynamicDelegate
-(void)sendingViewControllerHadSendDynamic{
    [self.tableView triggerPullToRefresh];
}



@end
